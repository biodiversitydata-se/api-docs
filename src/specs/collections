openapi: 3.0.1
info:
  title: Collectory REST services
  description: REST services for interacting with the collectory webapp
  termsOfService: https://docs.biodiversitydata.se/sbdi-data/sbdi-atlas-terms-of-use/
  contact:
    name: ""
    email: ""
  license:
    name: Mozilla Public License 1.1
    url: https://www.mozilla.org/en-US/MPL/1.1/
  version: 5.1.1
servers:
- url: https://collections.biodiversitydata.se
paths:
  /ws/contacts/{id}:
    get:
      tags:
      - contacts
      summary: Get a contact
      description: Get an existing contact with the specified contact id
      operationId: contacts
      parameters:
      - name: id
        in: path
        description: contact identifier value
        required: true
        schema:
          type: string
        example: 31
      responses:
        "200":
          description: Contact info
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactModelResponse'
            text/csv:
              schema:
                type: string
            text/xml:
              schema:
                $ref: '#/components/schemas/ContactModelResponse'
      security:
      - openIdConnect: []
    post:
      tags:
      - contacts
      summary: Update an existing contact
      description: Update an existing contact with the specified contact id
      operationId: updateContact
      parameters:
      - name: id
        in: path
        description: contact identifier value
        required: true
        schema:
          type: string
        example: 31
      requestBody:
        description: A JSON object containing the contact details to be updated
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "200":
          description: Updated status of the contact with new contact info
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactModelResponse'
      security:
      - openIdConnect: []
  /ws/{entity}:
    get:
      tags:
      - "collection, institution, dataProvider, dataResource, tempDataResource, dataHub"
      summary: list entities for a given type
      operationId: listEntities
      parameters:
      - name: entity
        in: path
        description: "entity type; collection, institution, dataProvider, dataResource,\
          \ tempDataResource, dataHub"
        required: true
        schema:
          type: string
        example: collection
      responses:
        "200":
          description: List of entities
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity'
    post:
      tags:
      - "collection, institution, dataProvider, dataResource, tempDataResource, dataHub"
      summary: create entity
      description: create entity
      operationId: createEntity
      parameters:
      - name: entity
        in: path
        description: "entity i.e.  collection, institution, dataProvider, dataResource,\
          \ tempDataResource, dataHub"
        required: true
        schema:
          type: string
        example: collection
      requestBody:
        description: A JSON object containing the entity to be saved or updated
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "201":
          description: Status of operation
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
      security:
      - openIdConnect: []
  /ws/eml/{id}:
    get:
      tags:
      - field
      summary: Get a field by Id
      description: Get a field by Id. Includes all objects associated with the field.
      operationId: getFieldById
      parameters:
      - name: id
        in: path
        description: Id of the field
        required: true
        schema:
          type: string
        example: dr368
      - name: start
        in: query
        description: starting index for associated objects
        schema:
          type: integer
          format: int64
        example: 0
      - name: pageSize
        in: query
        description: number of associated objects to return
        schema:
          type: integer
          format: int64
        example: 1
      - name: q
        in: query
        description: restrict to associated object names that contain this value
        schema:
          type: string
        example: Environment
      responses:
        "200":
          description: field
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/Field'
  /ws/find/{entity}:
    post:
      tags:
      - "collection, institution, dataProvider, dataResource, tempDataResource, dataHub"
      summary: Find entities for a list of entity uids
      description: Find detailed information for a list of entities
      operationId: findEntities
      parameters:
      - name: entity
        in: path
        description: "entity type; collection, institution, dataProvider, dataResource,\
          \ tempDataResource, dataHub"
        required: true
        schema:
          type: string
        example: collection
      - name: apikey
        in: header
        description: authorisation for dataResource connection details
        schema:
          type: string
      requestBody:
        description: List of uids as JSON list
        content:
          application/json: {}
      responses:
        "200":
          description: Entity Info
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  oneOf:
                  - $ref: '#/components/schemas/Collection'
                  - $ref: '#/components/schemas/Institution'
                  - $ref: '#/components/schemas/DataProvider'
                  - $ref: '#/components/schemas/DataResource'
                  - $ref: '#/components/schemas/TempDataResource'
                  - $ref: '#/components/schemas/DataHub'
  /ws/{entity}/{uid}:
    get:
      tags:
      - "collection, institution, dataProvider, dataResource, tempDataResource, dataHub"
      summary: Get an entity for a specified entity uid
      description: Get detailed information for a specific entity
      operationId: getEntity
      parameters:
      - name: entity
        in: path
        description: "entity type; collection, institution, dataProvider, dataResource,\
          \ tempDataResource, dataHub"
        required: true
        schema:
          type: string
        example: collection
      - name: uid
        in: path
        description: uid of an instance of entity
        required: true
        schema:
          type: string
        example: co43
      - name: apikey
        in: header
        description: authorisation for dataResource connection details
        schema:
          type: string
      responses:
        "200":
          description: Entity Info
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/Collection'
                - $ref: '#/components/schemas/Institution'
                - $ref: '#/components/schemas/DataProvider'
                - $ref: '#/components/schemas/DataResource'
                - $ref: '#/components/schemas/TempDataResource'
                - $ref: '#/components/schemas/DataHub'
    post:
      tags:
      - "collection, institution, dataProvider, dataResource, tempDataResource, dataHub"
      summary: Update an entity
      description: "Update an  entity  - if uid is specified, entity must exist and\
        \ is updated with the provided data"
      operationId: updateEntity
      parameters:
      - name: entity
        in: path
        description: "entity i.e.  collection, institution, dataProvider, dataResource,\
          \ tempDataResource, dataHub"
        required: true
        schema:
          type: string
        example: collection
      - name: uid
        in: path
        description: uid of an instance of entity
        required: true
        schema:
          type: string
        example: co43
      requestBody:
        description: A JSON object containing the entity to be saved or updated
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "201":
          description: Status of operation  -  inserted
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
      security:
      - openIdConnect: []
  /ws/syncGBIF:
    get:
      tags:
      - gbif
      summary: Update All registrations with GBIF
      operationId: syncGBIF
      responses:
        "200":
          description: Status of GBIF sync operation
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
      security:
      - openIdConnect: []
  /ws/{entity}/{uid}/contacts/{id}:
    post:
      tags:
      - contacts
      summary: Update or create a contact association for a single entity.
      description: Update or create a contact for an entity with the specified entity
        uid contact id
      operationId: updateContactFor
      parameters:
      - name: entity
        in: path
        description: "metadata entity type  i.e. collection, institution, dataProvider,\
          \ dataResource, dataHub"
        required: true
        schema:
          type: string
        example: collection
      - name: uid
        in: path
        description: uid the entity instance
        required: true
        schema:
          type: string
        example: co43
      - name: id
        in: path
        description: contact identifier value
        required: true
        schema:
          type: string
        example: 844
      requestBody:
        description: A JSON object containing the contact details to be updated
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        "201":
          description: Status of operation  -  inserted
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
        "200":
          description: Status of operation  -  updated
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
      security:
      - openIdConnect: []
  /ws/gbif/compare/{uid}:
    get:
      tags:
      - gbif
      summary: Returns datasets for a specific data provider
      operationId: compareGbif
      parameters:
      - name: uid
        in: path
        description: provider uid
        required: true
        schema:
          type: string
        example: dp0
      - name: onlyOutOfSync
        in: query
        description: Boolean flag to determine whether to only include out-of-sync
          datasets
        schema:
          type: boolean
        example: true
      responses:
        "200":
          description: A list of datasets and meta data
          content:
            application/json: {}
  /ws/gbif/scan/{uid}:
    get:
      tags:
      - gbif
      summary: Update the collectory with data from external resources GBIF
      description: Update the collectory with data from external resources i.e. GBIF
      operationId: scanGbif
      parameters:
      - name: uid
        in: path
        description: provider uid
        required: true
        schema:
          type: string
        example: 1
      responses:
        "200":
          description: Result of the scan operation
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GbifScanResponse'
      security:
      - openIdConnect: []
  /ws/ipt/compare/{uid}:
    get:
      tags:
      - ipt
      summary: Returns datasets for a specific data provider
      operationId: compareIpt
      parameters:
      - name: uid
        in: path
        description: provider uid
        required: true
        schema:
          type: string
        example: dp0
      - name: onlyOutOfSync
        in: query
        description: Boolean flag to determine whether to only include out-of-sync
          datasets
        schema:
          type: boolean
        example: true
      responses:
        "200":
          description: A list of datasets and meta data
          content:
            application/json: {}
  /ws/ipt/scan/{uid}:
    get:
      tags:
      - ipt
      summary: Scan an IPT instance described by a data provider id
      description: Scan an IPT instance described by a data provider id
      operationId: scanIpt
      parameters:
      - name: uid
        in: path
        description: provider uid
        required: true
        schema:
          type: string
        example: dp1518
      - name: create
        in: query
        description: Boolean flag to determine whether to update existing datasets
          and create data resources for new datasets
        schema:
          type: boolean
        example: false
      - name: check
        in: query
        description: Boolean flag to  check to see ifresource needs updating by looking
          at the data currency
        schema:
          type: boolean
        example: true
      requestBody:
        content:
          application/json:
            schema:
              type: string
          test/xml:
            schema:
              type: string
          text/plain:
            schema:
              type: string
      responses:
        "200":
          description: Result of the scan operation
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
            test/xml:
              schema:
                type: string
            text/plain:
              schema:
                type: string
      security:
      - openIdConnect: []
  /ws/licence:
    get:
      tags:
      - licence
      summary: Get a list of available licences
      operationId: getLicence
      responses:
        "200":
          description: A list of available licences
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LicenceResponse'
  /ws/citations:
    post:
      tags:
      - citations
      summary: Get citations for a list of data resource UIDs.
      operationId: getCitations
      parameters:
      - name: Accept
        in: header
        schema:
          type: string
        example: application/json or text/csv or text/plain
      requestBody:
        description: A JSON array containing dataResource UIDs.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
            example:
            - dr654
            - dr653
          text/csv:
            schema:
              type: array
              items:
                type: string
            example:
            - dr654
            - dr653
          text/plain:
            schema:
              type: array
              items:
                type: string
            example:
            - dr654
            - dr653
        required: true
      responses:
        "200":
          description: citation
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Citation'
            text/csv:
              schema:
                type: string
            text/plain:
              schema:
                type: string
  /ws/lookup/inst/{institutionCode}/coll/{collectionCode}:
    get:
      tags:
      - "collection, hubs"
      summary: Get the provider group for a collection and institution code
      operationId: getProviderGroupForCollectionAndInstitutionCodes
      parameters:
      - name: institutionCode
        in: path
        description: Institution code
        required: true
        schema:
          type: string
        example: in105
      - name: collectionCode
        in: path
        description: Collection code
        required: true
        schema:
          type: string
        example: co229
      responses:
        "200":
          description: provider group summary
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderGroupSummaryResponse'
  /ws/lookup/summary/{id}:
    get:
      tags:
      - "collection, institution, dataProvider, dataResource, tempDataResource, dataHub"
      summary: Get a summary information for an entity
      operationId: getEntitySummary
      parameters:
      - name: id
        in: path
        description: Entity id
        required: true
        schema:
          type: string
        example: dp3874
      responses:
        "200":
          description: entity summary
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitySummaryResponse'
components:
  schemas:
    ContactModelResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        fax:
          type: string
        mobile:
          type: string
        publish:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    Field:
      type: object
    Address:
      type: object
      properties:
        street:
          type: string
        postBox:
          type: string
        city:
          type: string
        state:
          type: string
        postcode:
          type: string
        country:
          type: string
        id:
          type: integer
          format: int64
    Attribution:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        uid:
          type: string
        id:
          type: integer
          format: int64
    Collection:
      type: object
      properties:
        collectionType:
          type: string
        active:
          type: string
        numRecords:
          type: integer
          format: int32
        numRecordsDigitised:
          type: integer
          format: int32
        states:
          type: string
        geographicDescription:
          type: string
        eastCoordinate:
          type: number
        westCoordinate:
          type: number
        northCoordinate:
          type: number
        southCoordinate:
          type: number
        startDate:
          type: string
        endDate:
          type: string
        kingdomCoverage:
          type: string
        scientificNames:
          type: string
        subCollections:
          type: string
        institution:
          $ref: '#/components/schemas/Institution'
        id:
          type: integer
          format: int64
        providerMap:
          $ref: '#/components/schemas/ProviderMap'
        externalIdentifiers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ExternalIdentifier'
        state:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        keywords:
          type: string
        listOfCollectionCodesForLookup:
          type: array
          items:
            type: string
        listOfInstitutionCodesForLookup:
          type: array
          items:
            type: string
        inexactlyMapped:
          type: boolean
        alapartner:
          type: boolean
        collectionAttributionList:
          type: array
          items:
            $ref: '#/components/schemas/Attribution'
        attributionList:
          type: array
          items:
            $ref: '#/components/schemas/Attribution'
        primaryContact:
          $ref: '#/components/schemas/ContactFor'
        primaryPublicContact:
          $ref: '#/components/schemas/ContactFor'
        providerDataResources:
          type: object
        providerDataProviders:
          type: object
        pubShortDescription:
          type: string
        userLastModified:
          type: string
        websiteUrl:
          type: string
        networkMembership:
          type: string
        attributions:
          type: string
        publicContactsPrimaryFirst:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        altitude:
          type: string
        acronym:
          type: string
        techDescription:
          type: string
        gbifRegistryKey:
          type: string
        phone:
          type: string
        imageRef:
          $ref: '#/components/schemas/Image'
        contactsPrimaryFirst:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        guid:
          type: string
        taxonomyHints:
          type: string
        pubDescription:
          type: string
        latitude:
          type: number
          format: double
        email:
          type: string
        notes:
          type: string
        isALAPartner:
          type: boolean
        logoRef:
          $ref: '#/components/schemas/Image'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        longitude:
          type: number
          format: double
        focus:
          type: string
        uid:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        institutionId:
          type: object
        providerMapId:
          type: object
    Contact:
      type: object
      properties:
        title:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        mobile:
          type: string
        email:
          type: string
        fax:
          type: string
        notes:
          type: string
        publish:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        userLastModified:
          type: string
        id:
          type: integer
          format: int64
    ContactFor:
      type: object
      properties:
        contact:
          $ref: '#/components/schemas/Contact'
        entityUid:
          type: string
        role:
          type: string
        administrator:
          type: boolean
        primaryContact:
          type: boolean
        notify:
          type: boolean
        dateCreated:
          type: string
          format: date-time
        dateLastModified:
          type: string
          format: date-time
        userLastModified:
          type: string
        id:
          type: integer
          format: int64
        contactId:
          type: object
    ExternalIdentifier:
      type: object
      properties:
        entityUid:
          type: string
        identifier:
          type: string
        source:
          type: string
        uri:
          type: string
        id:
          type: integer
          format: int64
        label:
          type: string
        validUri:
          type: boolean
    Image:
      type: object
      properties:
        file:
          type: string
        caption:
          type: string
        attribution:
          type: string
        copyright:
          type: string
        id:
          type: integer
          format: int64
    Institution:
      type: object
      properties:
        institutionType:
          type: string
        childInstitutions:
          type: string
        gbifCountryToAttribute:
          type: string
        id:
          type: integer
          format: int64
        collections:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Collection'
        externalIdentifiers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ExternalIdentifier'
        state:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        keywords:
          type: string
        alapartner:
          type: boolean
        attributionList:
          type: array
          items:
            $ref: '#/components/schemas/Attribution'
        primaryContact:
          $ref: '#/components/schemas/ContactFor'
        primaryPublicContact:
          $ref: '#/components/schemas/ContactFor'
        providerDataResources:
          type: object
        providerDataProviders:
          type: object
        pubShortDescription:
          type: string
        userLastModified:
          type: string
        websiteUrl:
          type: string
        networkMembership:
          type: string
        attributions:
          type: string
        publicContactsPrimaryFirst:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        altitude:
          type: string
        acronym:
          type: string
        techDescription:
          type: string
        gbifRegistryKey:
          type: string
        phone:
          type: string
        imageRef:
          $ref: '#/components/schemas/Image'
        contactsPrimaryFirst:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        guid:
          type: string
        taxonomyHints:
          type: string
        pubDescription:
          type: string
        latitude:
          type: number
          format: double
        email:
          type: string
        notes:
          type: string
        isALAPartner:
          type: boolean
        logoRef:
          $ref: '#/components/schemas/Image'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        longitude:
          type: number
          format: double
        focus:
          type: string
        uid:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        linkedDataResources:
          type: array
          items:
            type: string
    ProviderCode:
      type: object
      properties:
        code:
          type: string
        id:
          type: integer
          format: int64
    ProviderMap:
      type: object
      properties:
        institution:
          $ref: '#/components/schemas/Institution'
        collection:
          $ref: '#/components/schemas/Collection'
        matchAnyCollectionCode:
          type: boolean
        exact:
          type: boolean
        warning:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        collectionCodes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProviderCode'
        institutionCodes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProviderCode'
        institutionId:
          type: object
        collectionId:
          type: object
    DataProvider:
      type: object
      properties:
        hiddenJSON:
          type: string
        gbifCountryToAttribute:
          type: string
        id:
          type: integer
          format: int64
        resources:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/DataResource'
        externalIdentifiers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ExternalIdentifier'
        consumerInstitutions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Institution'
        consumerCollections:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Collection'
        state:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        keywords:
          type: string
        attributionList:
          type: array
          items:
            $ref: '#/components/schemas/Attribution'
        primaryContact:
          $ref: '#/components/schemas/ContactFor'
        primaryPublicContact:
          $ref: '#/components/schemas/ContactFor'
        pubShortDescription:
          type: string
        userLastModified:
          type: string
        websiteUrl:
          type: string
        networkMembership:
          type: string
        attributions:
          type: string
        publicContactsPrimaryFirst:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        altitude:
          type: string
        acronym:
          type: string
        techDescription:
          type: string
        gbifRegistryKey:
          type: string
        phone:
          type: string
        imageRef:
          $ref: '#/components/schemas/Image'
        contactsPrimaryFirst:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        guid:
          type: string
        taxonomyHints:
          type: string
        pubDescription:
          type: string
        latitude:
          type: number
          format: double
        email:
          type: string
        notes:
          type: string
        isALAPartner:
          type: boolean
        logoRef:
          $ref: '#/components/schemas/Image'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        longitude:
          type: number
          format: double
        focus:
          type: string
        uid:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    DataResource:
      type: object
      properties:
        rights:
          type: string
        citation:
          type: string
        licenseType:
          type: string
        licenseVersion:
          type: string
        resourceType:
          type: string
        provenance:
          type: string
        informationWithheld:
          type: string
        dataGeneralizations:
          type: string
        permissionsDocument:
          type: string
        permissionsDocumentType:
          type: string
        riskAssessment:
          type: boolean
        filed:
          type: boolean
        status:
          type: string
        harvestingNotes:
          type: string
        mobilisationNotes:
          type: string
        harvestFrequency:
          type: integer
          format: int32
        lastChecked:
          type: string
          format: date-time
        dataCurrency:
          type: string
          format: date-time
        connectionParameters:
          type: string
        imageMetadata:
          type: string
        defaultDarwinCoreValues:
          type: string
        downloadLimit:
          type: integer
          format: int32
        contentTypes:
          type: string
        publicArchiveAvailable:
          type: boolean
        gbifDataset:
          type: boolean
        isShareableWithGBIF:
          type: boolean
        dataProvider:
          $ref: '#/components/schemas/DataProvider'
        institution:
          $ref: '#/components/schemas/Institution'
        makeContactPublic:
          type: boolean
        isPrivate:
          type: boolean
        repatriationCountry:
          type: string
        dataCollectionProtocolName:
          type: string
        dataCollectionProtocolDoc:
          type: string
        suitableFor:
          type: string
        suitableForOtherDetail:
          type: string
        purpose:
          type: string
        geographicDescription:
          type: string
        westBoundingCoordinate:
          type: string
        eastBoundingCoordinate:
          type: string
        northBoundingCoordinate:
          type: string
        southBoundingCoordinate:
          type: string
        beginDate:
          type: string
        endDate:
          type: string
        methodStepDescription:
          type: string
        qualityControlDescription:
          type: string
        gbifDoi:
          type: string
        id:
          type: integer
          format: int64
        externalIdentifiers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ExternalIdentifier'
        consumerInstitutions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Institution'
        consumerCollections:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Collection'
        state:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        keywords:
          type: string
        attributionList:
          type: array
          items:
            $ref: '#/components/schemas/Attribution'
        primaryContact:
          $ref: '#/components/schemas/ContactFor'
        primaryPublicContact:
          $ref: '#/components/schemas/ContactFor'
        pubShortDescription:
          type: string
        userLastModified:
          type: string
        websiteUrl:
          type: string
        networkMembership:
          type: string
        attributions:
          type: string
        publicContactsPrimaryFirst:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        altitude:
          type: string
        acronym:
          type: string
        techDescription:
          type: string
        gbifRegistryKey:
          type: string
        phone:
          type: string
        imageRef:
          $ref: '#/components/schemas/Image'
        contactsPrimaryFirst:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        guid:
          type: string
        taxonomyHints:
          type: string
        pubDescription:
          type: string
        latitude:
          type: number
          format: double
        email:
          type: string
        notes:
          type: string
        isALAPartner:
          type: boolean
        logoRef:
          $ref: '#/components/schemas/Image'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        longitude:
          type: number
          format: double
        focus:
          type: string
        uid:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        institutionId:
          type: object
        verified:
          type: boolean
        creativeCommons:
          type: boolean
        dataProviderId:
          type: object
    TempDataResource:
      type: object
      properties:
        uid:
          type: string
        name:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        alaId:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        numberOfRecords:
          type: integer
          format: int32
        webserviceUrl:
          type: string
        uiUrl:
          type: string
        status:
          type: string
        isContactPublic:
          type: boolean
        description:
          type: string
        dataGeneralisations:
          type: string
        informationWithheld:
          type: string
        license:
          type: string
        citation:
          type: string
        sourceFile:
          type: string
        prodUid:
          type: string
        keyFields:
          type: string
        csvSeparator:
          type: string
        id:
          type: integer
          format: int64
        type:
          type: string
        primaryContact:
          $ref: '#/components/schemas/ContactFor'
        primaryPublicContact:
          $ref: '#/components/schemas/ContactFor'
        publicContactsPrimaryFirst:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        contactsPrimaryFirst:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
    DataHub:
      type: object
      properties:
        memberInstitutions:
          type: string
        memberCollections:
          type: string
        memberDataResources:
          type: string
        members:
          type: string
        id:
          type: integer
          format: int64
        externalIdentifiers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ExternalIdentifier'
        state:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        keywords:
          type: string
        attributionList:
          type: array
          items:
            $ref: '#/components/schemas/Attribution'
        primaryContact:
          $ref: '#/components/schemas/ContactFor'
        primaryPublicContact:
          $ref: '#/components/schemas/ContactFor'
        pubShortDescription:
          type: string
        userLastModified:
          type: string
        websiteUrl:
          type: string
        networkMembership:
          type: string
        attributions:
          type: string
        publicContactsPrimaryFirst:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        altitude:
          type: string
        acronym:
          type: string
        techDescription:
          type: string
        gbifRegistryKey:
          type: string
        phone:
          type: string
        imageRef:
          $ref: '#/components/schemas/Image'
        contactsPrimaryFirst:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        guid:
          type: string
        taxonomyHints:
          type: string
        pubDescription:
          type: string
        latitude:
          type: number
          format: double
        email:
          type: string
        notes:
          type: string
        isALAPartner:
          type: boolean
        logoRef:
          $ref: '#/components/schemas/Image'
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactFor'
        longitude:
          type: number
          format: double
        focus:
          type: string
        uid:
          type: string
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
    Entity:
      type: object
      properties:
        name:
          type: string
        uri:
          type: string
        uid:
          type: string
        logo:
          type: string
    GbifScanResponse:
      type: object
      properties:
        loadGuid:
          type: string
        trackingUrl:
          type: string
        updates:
          type: array
          items:
            type: object
        resources:
          type: array
          items:
            type: object
    LicenceResponse:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
    Citation:
      type: object
      properties:
        name:
          type: string
        citation:
          type: string
        rights:
          type: string
        link:
          type: string
        dataGeneralizations:
          type: string
        informationWithheld:
          type: string
        downloadLimit:
          type: integer
          format: int32
        uid:
          type: string
        doi:
          type: string
    ProviderGroupSummaryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        uid:
          type: string
        uri:
          type: string
        name:
          type: string
        acronym:
          type: string
        shortDescription:
          type: string
        lsid:
          type: string
        taxonomyCoverageHints:
          type: object
    EntitySummaryResponse:
      type: object
      properties:
        acronym:
          type: string
        collectionId:
          type: string
        collectionName:
          type: string
        collectionUid:
          type: string
        derivedCollCodes:
          type: array
          items:
            type: string
        derivedInstCodes:
          type: array
          items:
            type: string
        hubMembership:
          type: object
          additionalProperties:
            type: string
        id:
          type: integer
          format: int64
        institutionId:
          type: string
        institutionLogoUrl:
          type: string
        institutionName:
          type: string
        institutionUid:
          type: string
        lsid:
          type: string
        name:
          type: string
        relatedDataProviders:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
        relatedDataResources:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
        shortDescription:
          type: string
        taxonomyCoverageHints:
          type: object
        uid:
          type: string
        uri:
          type: string
  securitySchemes:
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: https://auth.biodiversitydata.se/cas/oidc/.well-known
    oauth:
      type: oauth2
      flows:
        clientCredentials:
          scopes: {}
        authorizationCode:
          scopes: {}
